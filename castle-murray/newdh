#! /bin/bash


## First, let's clean up the domain. 

predomain=$1
stripped=$(echo ${predomain} | sed "s#https://##" | sed "s#http://##" | sed "s#www.##" |sed "s#/.*##") ## takes the https's and whatnot off
if dig +short ${stripped} | egrep -q '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}'
then
    if  whois ${stripped} | grep -iq "No match for domain"
        then subtest=$(echo "${stripped}"| sed '/\..*\./s/^[^.]*\.//') ## if subdomain detected by the whois not matching a fqdn, this strips the subdomain
            if dig +short ${subtest} | egrep -q '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}'  && whois ${subtest} | grep -iq "No match for domain"
            then echo "I'm getting an IP but... it doesn't look like we're getting any WHOIS info. This won't be pretty." ## edge case. 
	    DOMAIN=${subtest}
        elif dig +short ${subtest} | egrep -q '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}'  && whois ${subtest} | grep -iqv "No match for domain"
            then  DOMAIN=${subtest}
            echo -e "${stripped} is a subdomain\nIP:\t$(dig +short ${stripped})"
        fi
        elif whois ${stripped} | grep -iqv "No match for domain"
            then DOMAIN=${stripped}
     fi
else echo "${stripped} is not a legitimate subdomain."
subtest=$(echo "${stripped}"| sed '/\..*\./s/^[^.]*\.//')
            if dig +short ${subtest} | egrep -q '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}'  && whois ${subtest} | grep -iqv "No match for domain"
            then  DOMAIN=${subtest}
        else echo "And ${subtest} isn't registered!"
		exit
fi
fi

## definitions
whoall=$(whois $DOMAIN)

ns=$(echo "${whoall}"| awk -F ": " '/Name Server/ {print tolower($2)}'| sort | uniq)
nsip=$(dig +short ${ns})
orgs=$(for ip in ${nsip}; do whois ${ip} |awk '/OrgName/';done)
digns=$(dig +shor ns $DOMAIN)
dignsip=$(dig +short ${digns})
dignsorgs=$(for dnip in ${dignsip}; do whois ${dnip} |awk '/OrgName/';done)
DOMIP=$(dig  +short ${DOMAIN})
MXREC=$(dig +short mx ${DOMAIN} | awk '{print $2}' | sed 's/\.$//')
WHODOMIP=$(whois ${DOMIP})

#meat and potatoes

echo $DOMAIN
echo


## I have found that if the whois is showing a different result from dig ns there is a potential issue at the registrar. Therefore it's a good idea to compare them.

echo "WHOIS NS RESULTS "
for i in ${ns}; do echo -e "\t${i}"; done

## this whole section is just to check if the nameservers are custom nameservers on an IMH vps/dedi.
if
echo ${ns} |grep -qi "inmotion"
then
    echo
elif
echo ${ns} |grep -qi "cloudflare" ##
then
    echo
elif
echo ${ns} |grep -qiv "inmotion\|webhostinghub\|servconfig" && echo ${orgs} |grep -qiv "inmotion"
then
    echo
elif
echo ${ns} |grep -qiv "inmotion" && echo ${orgs} |grep -qi "inmotion" ## this is the part that checks for custom nameservers. If the nameserver is not imh but the ip of the ns IS imh. custom nameserver. BOOM.
then
    echo -e "\tCustom Nameservers on IMH server."
    echo
else
    echo -e "\tI have no idea what is going on. Do a proper dig."
    echo
fi


echo "DIG NS RESULTS"
## dig ns results
## same as the whois results really. more reliable though.

for i in ${digns}; do echo -e "\t${i}"; done;
if
echo ${digns} |grep -qi "inmotion"
then
    
    
    echo
elif
echo ${digns} |grep -qi "cloudflare"
then
    echo
elif
echo ${digns} |grep -qiv "inmotion" && echo ${dignsorgs} |grep -qiv "inmotion"
then
    echo
elif
echo ${digns} |grep -qiv "inmotion" && echo ${dignsorgs} |grep -qi "inmotion"
then
    echo -e "\tCustom Nameservers on IMH Server."
    echo
else
    echo -e "I have no idea what is going on. Do a proper dig."
    echo
fi

#Registrar

echo "Registrar:";
echo "${whoall}" | awk -F ":" '/ Registrar:/ {print "\t" $2}'
echo "${whoall}" | awk -F":" '/Registrar URL:/  {print "\t" $3}'| sed -e 's#//www.##' -e 's#//##'| uniq
echo;
#Expiration 
echo "Domain expiration:"
echo "${whoall}" | awk -F "[:T]" '/Expir/ {print "\t" $2}'| uniq
echo

# is the domain on an inmotion IP address?

echo "InMotion IP?";
if
echo ${WHODOMIP} | grep -i -q inmotion;
then
    echo -e "\t\e[38;5;40mYES! \e[0m"
else
    echo -e "\t\e[38;5;196mNO! \e[0m"
fi
for IP in ${DOMIP}
do
    echo -e "\t${IP}"
done
echo
# This is to detect if there are more than one A records pointed at different locations.
for ip in ${DOMIP}
do
    echo ${ip}
    whois ${ip} | awk -F":" '/OrgName:/ {print "\t" $2}' | sed -e 's/ //g'
done
echo

# Hostname for ip
        echo "Hostname:";
        HOST=$(dig +short -x ${DOMIP})
        ## checks if the hostname contains IMH or similar domain.
        if echo ${WHODOMIP}| grep -iq 'inmotion\|servconfig\|webhostinghub'
        then echo -e "\t${HOST}"
            if echo "${HOST}"| grep -iq 'inmotion\|servconfig\|webhostinghub'
            then echo "${HOST}"| awk '/inmotion|servconfig|webhostinghub/ {print "\t"$5}'| awk -F"." '{print "\t" $1}'
            fi
            ## doesn't run host if the nameservers are cloudflare. If it DOES run host on a cloudflare IP it takes forever, so I added this to speed things up.
            
        elif echo ${dignsorgs} | grep -iq "cloudflare"
        then echo "Cloudflare, not able to run host"| awk '{print "\t" $0}';
            
        else
            echo -e "\tHOSTNAME NOT HELPFUL.\n\t${HOST}"
            
        fi
        echo

# MX records

echo "MX records:"
for mx in "${MXREC}";
do
    if echo ${mx} | grep -q "SOA";
    then echo " \t NO MX RECORD";
        ## checking if domain is using an email service
    elif echo ${mx} | grep -q -i "google\|outlook\|proton";
    
    then echo -e "\e[38;5;40mUsing Email service\e[0m"|awk '{print "\t" $0}';
        echo "${mx}" |awk '{print "\t\t" $0}';
        ## checking if the email is pointed to an IMH ip.
        
    else
        echo "${mx}"|awk '{print "\tMX Domain:\t" $0}';
        mxip=$(dig +short ${mx})
        
        echo "${mxip}" |awk '{print "\tMX IP:\t\t" $0}';
        #dig +short -x ${mxip} | awk '{print "\tMX PTR:\t\t" $0}'  
        echo -e "\tMX PTR:\t\t$(dig +short -x ${mxip})"

        if whois $(dig +short ${MXREC})| grep -iq inmotion
        then echo -e "\t\e[38;5;40memail is pointed at IMH.\e[0m";
            if dig +short txt ${DOMAIN} | grep -iq "spf"
            then echo -e "\t\e[38;5;40mSPF exists\e[0m"
            else echo -e "\t\e[38;5;196mNO SPF RECORD! \e[0m"
            fi
            if dig +short txt  default._domainkey.${DOMAIN} | grep -iq "dkim"
            then echo -e "\t\e[38;5;40mDKIM exists\e[0m"
            else echo -e "\t\e[38;5;196mNO DKIM RECORD! \e[0m"
            fi
            DMARC=$( dig +short txt  _dmarc.${DOMAIN})
            if echo "${DMARC}" | grep -iq "dmarc"
            then echo -e "\t\e[38;5;40mDMARC exists\e[0m"
                if echo "${DMARC}" | grep -iq 'reject\|quarantine'
                then true
                else echo -e "\t\e[38;5;196mBUT IT\'S SET TO NONE! \e[0m"
                fi
            else echo -e "\t\e[38;5;196mNO DMARC RECORD! \e[0m"
            fi
            ## and if it is not an IMH IP...
        else echo -e "\t\e[38;5;196memail is not pointed at IMH.\e[0m";
        fi;
        
    fi;
done
